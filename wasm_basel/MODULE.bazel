# Bind http_file for adapter
http_file = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

# NOTE: WASIP2 adapter download not configured here. The project includes
# `third_party/wasi_adapters/` for adapter files (see third_party/BUILD.bazel).
# If you have a remote WASIP2 adapter URL, you can add an http_file entry
# here. For now the build will reference local adapters under
# //third_party/wasi_adapters.
# rules_rust toolchains
bazel_dep(name = "rules_rust", version = "0.63.0")
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(edition = "2021")
use_repo(rust, "rust_toolchains")

# Add a wasm toolchain (wasm32-wasi) so rules_rust can produce Wasm outputs.
# crates.io deps via crate_universe (correct extension name is 'crate')
crate = use_extension("@rules_rust//crate_universe:extensions.bzl", "crate")
crate.spec(package = "wit-bindgen-rt", version = "0.44.0")
crate.from_specs(name = "crates")
use_repo(crate, "crates")

# Hermetic C/C++ toolchains (Zig)
bazel_dep(name = "hermetic_cc_toolchain", version = "4.0.1")
hcc = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(hcc, "zig_sdk")
register_toolchains(
    "@zig_sdk//toolchain/...",
    "@zig_sdk//libc_aware/toolchain/...",
)
