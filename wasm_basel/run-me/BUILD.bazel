#########################
# Pure Bazel composition
#########################

genrule(
    name = "hello.wasm.pure",
    srcs = [
        "//calculate:calculate.component.wasm.pure",
        "//adder:adder.component.wasm.pure",
    ],
    outs = ["hello.wasm"],
    cmd = """
set -euo pipefail
CALC="$(location //calculate:calculate.component.wasm.pure)"
ADDR="$(location //adder:adder.component.wasm.pure)"
OUT="$@"
wac plug "$$CALC" --plug "$$ADDR" -o "$$OUT"
""",
    tags = ["requires-wac"],
)



genrule(
    name = "run_hello",
    srcs = [":hello.wasm"],
    outs = ["run_hello.out"],
    # Use jco which knows how to run WASI Command components
    cmd = "jco run $(location :hello.wasm) >$@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "eval_expression",
    srcs = [":hello.wasm", ":hello.wasm.pure"],
    outs = ["eval_expression.out"],
    cmd = "wasmtime $(location :hello.wasm) --invoke eval_expression >$@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "run-with-wac",
    srcs = [":hello.wasm", ":hello.wasm.pure"],
    outs = ["run_with_wac.out"],
    # wac doesn't provide a 'run' subcommand; use jco to execute the composed component.
    cmd = "jco run $(location :hello.wasm) >$@",
    visibility = ["//visibility:public"],
)

genrule(
    name = "run-with-jco",
    srcs = [":hello.wasm", ":hello.wasm.pure"],
    outs = ["run_with_jco.out"],
    # Use jco to run a WASI Command component
    cmd = "jco run $(location :hello.wasm) >$@",
    visibility = ["//visibility:public"],
)
